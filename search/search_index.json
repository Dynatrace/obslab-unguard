{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Using Dynatrace to Detect and Block Security Vulnerabilities","text":"<p>Support Policy</p> <p>This is a demo project created by the Developer Relations team at Dynatrace, showcasing integrations with open source technologies.</p> <p>Support is provided via GitHub issues only. The materials provided in this repository are offered \"as-is\" without any warranties, express or implied. Use them at your own risk.</p> <p>View the Code</p> <p>The code for this repository is hosted on GitHub. Click the \"View Code on GitHub\" link above.</p> <p>In this hands-on demo, you will use Dynatrace to detect and proactively block common application security vulnerabilities.</p> <p>Vulnerabilities in this system include:</p> <ul> <li>SQL Injection</li> <li>Command Injection</li> <li>JNDI Injection / Log4Shell</li> </ul> <p>Proceed to spin up the demo system below. The docs will then ask you to pick an adventure!</p>"},{"location":"#compatibility","title":"Compatibility","text":"Deployment Tutorial Compatible Dynatrace Managed \u274c Dynatrace SaaS \u2714\ufe0f <ul> <li>Click Here to Begin </li> </ul>"},{"location":"access-ui/","title":"4. Access User Interface","text":""},{"location":"access-ui/#access-the-demo-user-interface","title":"Access The Demo User Interface","text":"<p>Expose the user interface on port 8080 by port-forwarding:</p> <pre><code>kubectl -n unguard port-forward svc/unguard-envoy-proxy 8080:8080\n</code></pre> <p>Leave this command running. It will appear to hang. That's OK.</p> <p>Go to the <code>Ports</code> tab, right click the port <code>8080</code> and choose <code>Open in Browser</code>.</p> <p>Bug: Appended port :8080</p> <p></p> <p>You will get a \"page cannot be found\" error.</p> <p>Notice the URL looks like this:</p> <pre><code>https://codespace-name-ID-8080.app.github.dev:8080/ui\n</code></pre> <p>The fix</p> <p>Remove <code>:8080</code> and refresh.</p> <pre><code>https://codespace-name-ID-8080.app.github.dev/ui\n</code></pre> <p>If you see an \"Unauthorized\" page, it's working!</p> <p></p>"},{"location":"access-ui/#register-an-account","title":"Register an Account","text":"<p>To use Unguard, first register an account.</p> <ul> <li>Click the <code>Login/Register</code> link</li> <li>Enter any username + password you want</li> <li>Click <code>Sign up</code></li> </ul> <p></p> <p>You will be taken back to the sign in form. Now log in.</p> <p>You should now see your timeline with a prepopulated feed.</p> <p></p> <ul> <li>Click Here to Continue </li> </ul>"},{"location":"cleanup/","title":"8. Cleanup","text":"<p>To cleanup resources, go to https://github.com/codespaces and delete the codespace.</p> <p>You may also want to deactivate or delete the API token.</p> <ul> <li>What's Next? </li> </ul>"},{"location":"exploit-time/","title":"6. It's Exploit Time","text":"<p>The application is running correctly and telemetry is flowing into Dynatrace. It is time to begin exploiting Unguard.</p> <p>Please pick one of the following areas to begin an exploit.</p> <ul> <li> <p> SQL Injection</p> <p>Attempt to exploit Unguard using an SQL Injection attack.</p> <p> Start SQL Injection</p> </li> <li> <p> Command Injection</p> <p>Attempt to exploit Unguard using a Command Injection attack</p> <p> Start Command Injection.</p> </li> <li> <p> JNDI / Log4Shell Injection</p> <p>Attempt a JNDI Injection / Log4Shell exploit on Unguard.</p> <p> Start Log4Shell / JNDI Injection</p> </li> </ul>"},{"location":"getting-started/","title":"Getting Started","text":"<p>Larger Images</p> <p>To enlarge images, right click and open in new tab.</p>"},{"location":"getting-started/#dynatrace-environment","title":"Dynatrace Environment","text":"<p>You must have access to a Dynatrace SaaS environment. Sign up here</p> <p>Save the Dynatrace environment ID and environment</p> <ul> <li>The ID is the first portion of the URL. (eg. <code>acb12345</code> from <code>https://abc12345.live.dynatrace.com</code>)</li> <li>Your environment is probably <code>live</code> but could also be <code>sprint</code> or <code>dev</code></li> </ul>"},{"location":"getting-started/#create-api-token","title":"Create API Token","text":"<p>In Dynatrace:</p> <ul> <li>Press <code>ctrl + k</code>. Search for <code>access tokens</code>.</li> <li>Create a new access token with the following permissions:<ul> <li><code>entities.read</code></li> <li><code>settings.read</code></li> <li><code>settings.write</code></li> <li><code>DataExport</code></li> <li><code>InstallerDownload</code></li> <li><code>activeGateTokenManagement.create</code></li> <li><code>metrics.ingest</code></li> </ul> </li> </ul> <p>API Token Permissions</p> <p>These permissions are required to install the OneAgent in <code>applicationMode</code> and an ActiveGate on a Kubernetes cluster.</p>"},{"location":"getting-started/#configure-dynatrace","title":"Configure Dynatrace","text":"<p>The Dynatrace environment needs to be configured to automatically block incoming attacks.</p>"},{"location":"getting-started/#enable-oneagent-features","title":"Enable OneAgent Features","text":"<p>In Dynatrace:</p> <ul> <li>Press <code>ctrl + k</code>. Search for <code>settings</code></li> <li>Go to <code>Preferences &gt; OneAgent features</code></li> <li>Search for <code>code level</code></li> <li>Enable all the features (some require the instrumentation to be added in the details as well)</li> </ul> <p></p>"},{"location":"getting-started/#enable-vulnerability-analytics","title":"Enable Vulnerability Analytics","text":"<ul> <li>Go to <code>Application Security &gt; Application Security</code></li> <li>Now go to <code>Vulnerability Analytics &gt; General Settings</code></li> <li>Turn on the <code>Enable Third-party Vulnerability Analytics</code> toggle and ensure all languages are checked</li> <li>Switch to the <code>Code-level Vulnerability Analytics</code> tab</li> <li>Turn on the `Enable Code-level Vulnerability Analytics toggle</li> </ul>"},{"location":"getting-started/#enable-runtime-application-protection","title":"Enable Runtime Application Protection","text":"<ul> <li>Go to <code>Application Security &gt; Application Protection &gt; General Settings</code></li> <li>Turn on the <code>Enable Runtime Application Protection</code> toggle</li> <li>Ensure that <code>Attack Control Java</code> is set to <code>Block; incoming attacks detected and blocked.</code></li> <li>Ensure that <code>Attack Control .NET</code> is also set to <code>Block; incoming attacks detected and blocked.</code></li> </ul>"},{"location":"getting-started/#start-demo","title":"Start Demo","text":"<p>You've done the hard work! It is time to spin up the demo environment.</p> <p>Click this button to open the demo environment. This will open in a new tab.</p> <p></p> <ul> <li>Fill in the form with the details you've already gathered.</li> <li>Click <code>Create codespace</code></li> <li>Proceed to the next documentation step with the link below.</li> </ul> <p></p> <ul> <li>Click Here to Continue </li> </ul>"},{"location":"installation-explained/","title":"3. Installation Explained","text":""},{"location":"installation-explained/#hurry-up-and-wait","title":"Hurry up and wait","text":"<p>Grab a Coffee</p> <p>Everything is installing. This can take a while.</p> <p>While you wait, the section below will explain what you've just configured and how it works.</p> <p>The following components will be installed:</p> <ul> <li>Dynatrace Operator</li> <li>Dynatrace OneAgent</li> <li>Dynatrace ActiveGate</li> <li>Unguard application</li> </ul> <p>The Dynatrace details you provided during startup will be encrypted, stored in GitHub secrets and made available as environment variables.</p> <p>Tip</p> <p>Type <code>printenv</code> to see all environment variables set by GitHub.</p>"},{"location":"installation-explained/#wait-for-system","title":"Wait for System","text":"<p>The system may still be loading.</p> <p>Wait until the <code>Running postCreate command</code> loading spinner disappears.</p> <p>TODO</p> <p>Update image</p> <p></p> <p>Wait here until the terminal prompt looks like this (your username will differ).</p> <p>TODO</p> <p>Update Image</p> <p></p>"},{"location":"installation-explained/#wait-for-application","title":"Wait for Application","text":"<p>The Kubernetes cluster is available and the application is starting.</p> <p>Wait for all pods to be Ready (can take up to 10mins)</p> <pre><code>kubectl -n dynatrace wait --for condition=Ready pod --timeout=10m --all\nkubectl -n unguard wait --for condition=Ready pod --timeout=10m --all\n</code></pre> <p>The command will appear to hang until all pods are available.</p> <p>When all pods are running, the output will look like this:</p> <pre><code>pod/dynatrace-oneagent-csi-driver-****** condition met\npod/dynatrace-operator-******-*** condition met\npod/dynatrace-webhook-******-*** condition met\npod/dynatrace-webhook-******-*** condition met\npod/unguard-activegate-0 condition met\npod/unguard-ad-service-******-*** condition met\npod/unguard-envoy-proxy-******-*** condition met\npod/unguard-frontend-******-*** condition met\npod/unguard-like-service-******-*** condition met\npod/unguard-mariadb-0 condition met\npod/unguard-membership-service-******-*** condition met\npod/unguard-microblog-service-******-*** condition met\npod/unguard-payment-service-******-*** condition met\npod/unguard-profile-service-******-*** condition met\npod/unguard-proxy-service-******-*** condition met\npod/unguard-redis-******-*** condition met\npod/unguard-status-service-******-*** condition met\npod/unguard-user-auth-service-******-*** condition met\npod/unguard-user-simulator-******-*** condition met\n</code></pre> <ul> <li>Click Here to Continue </li> </ul>"},{"location":"resources/","title":"Resources","text":""},{"location":"resources/#why-would-i-use-the-dynatrace-otel-collector","title":"Why would I use the Dynatrace OTEL Collector?","text":"<p>See here.</p>"},{"location":"view-observability-data/","title":"5. Validate Observability Data","text":"<p>In Dynatrace, press <code>ctrl + k</code> and search for <code>Services</code>.</p> <p>You should see the Unguard microservices listed:</p> <p></p> <ul> <li>Click Here to Continue </li> </ul>"},{"location":"whats-next/","title":"10. What's Next?","text":"<ul> <li>Dynatrace Unguard Source Code on GitHub</li> <li>Learn more about Dynatrace Runtime Application Protection and how to manage and block attacks in Dynatrace</li> </ul>"},{"location":"command-injection/","title":"Command Injection","text":"<p>Unguard has a command injection vulnerability in the image posting feature of the <code>proxy-service</code>.</p> <p>Let's attempt that now.</p>"},{"location":"command-injection/#exploitation","title":"Exploitation","text":"<p>Posting the following will result in executing <code>whoami</code> after <code>example.com</code> has been fetched.</p> <p>To exploit the command injection vulnerability in the <code>proxy-service</code>:</p> <ul> <li>Log in to Unguard</li> <li>Post an image with an URL that adds a second command to the <code>curl</code> call.</li> </ul> <pre><code>example.com &amp;&amp; whoami #\n</code></pre> <p></p> <p>Remove original curl arguments</p> <p>Notice the trailing <code>#</code> will comment out all the other original curl arguments, which is essential.</p>"},{"location":"command-injection/#result-sql-injection-blocked","title":"Result: SQL Injection Blocked","text":"<p>Success</p> <p>Dynatrace OneAgent has successfully blocked the SQL injection attack!</p> <p>To verify that it really has been blocked:</p> <ul> <li>Click <code>Home</code></li> <li>Go back to your profile</li> <li>You should still see the empty box and <code>Add bio</code> text</li> </ul> <p></p>"},{"location":"command-injection/#validate-in-dynatrace","title":"Validate in Dynatrace","text":"<p>Let's see how Dynatrace visualises these attack attempts.</p> <p>In Dynatrace:</p> <ul> <li>Press <code>ctrl + k</code>. Search for <code>attacks</code></li> </ul> <p>Enlarge Images</p> <p>Remember, right click and \"open in a new tab\" to enlarge images</p> <p>You should see <code>1/1 Attacks blocked</code> and <code>0/1 Attacks exploited</code>.</p> <p></p>"},{"location":"command-injection/#view-attack-attempt-details","title":"View Attack Attempt Details","text":"<p>Scroll down to the section titled <code>1 attack detected</code> and follow the link to see the details of this attack.</p> <p>Dynatrace provides all the relevant information such as:</p> <ul> <li>A unique ID for this attack attempt so tracking is easier</li> <li>The entrypoint (a user bio page)</li> <li>The SQL statement (actual injection attempt)</li> <li>The vulnerable line of code and function</li> </ul> <p> </p> <p>Command Injection Prevented</p> <p>\ud83c\udf89 Dynatrace OneAgent has prevented a Command injection attack on your infrastructure.</p> <p>What's Next?</p> <p>Feel free to follow some of the other exploit tutorials or if you're finished, head to the cleanup page to cleanup your demo environment.</p>"},{"location":"log4shell/","title":"Log4Shell / JNDI Injection","text":"<p>Coming soon!</p> <p>This content is coming soon.</p> <p>If you'd like to learn about log4shell, view What is Log4Shell?</p>"},{"location":"snippets/disclaimer/","title":"Disclaimer","text":"<p>Support Policy</p> <p>This is a demo project created by the Developer Relations team at Dynatrace, showcasing integrations with open source technologies.</p> <p>Support is provided via GitHub issues only. The materials provided in this repository are offered \"as-is\" without any warranties, express or implied. Use them at your own risk.</p>"},{"location":"snippets/view-code/","title":"View code","text":"<p>View the Code</p> <p>The code for this repository is hosted on GitHub. Click the \"View Code on GitHub\" link above.</p>"},{"location":"sql-injection/","title":"SQL Injection","text":"<p>Unguard has an SQL injection vulnerability in the <code>profile-service</code>. You can exploit this via the <code>User profile</code> setting.</p> <p>Let's attempt that now.</p>"},{"location":"sql-injection/#exploitation","title":"Exploitation","text":"<p>To inject an SQL command, you simply need to log into Unguard, go to your profile page and insert a bio using the following text. This will set the text of all users (where their bio is currently unset) to <code>injected</code>:</p> <p></p> <p>If the button says <code>Add Bio</code></p> <pre><code>'); UPDATE bio SET bio_text = 'injected' WHERE 1 = 1; --\n</code></pre> <p>If the button says <code>Update Bio</code></p> <p><pre><code>' WHERE 0 = 1; UPDATE bio SET bio_text = 'injected' WHERE 1 = 1; --\n</code></pre> In this case, the beginning has to be slightly different to accommodate the syntax of the <code>INSERT INTO</code> statement.</p>"},{"location":"sql-injection/#result-sql-injection-blocked","title":"Result: SQL Injection Blocked","text":"<p>Success</p> <p>Dynatrace OneAgent has successfully blocked the SQL injection attack!</p> <p>To verify that it really has been blocked:</p> <ul> <li>Click <code>Home</code></li> <li>Go back to your profile</li> <li>You should still see the empty box and <code>Add bio</code> text</li> </ul> <p></p>"},{"location":"sql-injection/#validate-in-dynatrace","title":"Validate in Dynatrace","text":"<p>Let's see how Dynatrace visualises these attack attempts.</p> <p>In Dynatrace:</p> <ul> <li>Press <code>ctrl + k</code>. Search for <code>attacks</code></li> </ul> <p>Enlarge Images</p> <p>Remember, right click and \"open in a new tab\" to enlarge images</p> <p>You should see <code>1/1 Attacks blocked</code> and <code>0/1 Attacks exploited</code>.</p> <p></p>"},{"location":"sql-injection/#view-attack-attempt-details","title":"View Attack Attempt Details","text":"<p>Scroll down to the section titled <code>1 attack detected</code> and follow the link to see the details of this attack.</p> <p>Dynatrace provides all the relevant information such as:</p> <ul> <li>A unique ID for this attack attempt so tracking is easier</li> <li>The entrypoint (a user bio page)</li> <li>The SQL statement (actual injection attempt)</li> <li>The vulnerable line of code and function</li> </ul> <p> </p> <p>SQL Injection Prevented</p> <p>\ud83c\udf89 Dynatrace OneAgent has prevented an SQL injection attack on your infrastructure.</p> <p>What's Next?</p> <p>Feel free to follow some of the other exploit tutorials or if you're finished, head to the cleanup page to cleanup your demo environment.</p>"}]}